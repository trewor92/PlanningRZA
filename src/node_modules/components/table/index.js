import React, { Component } from 'react';
import {connect} from 'react-redux'
import {getTableHeader, getTableData, getTableName, getTableError} from 'selectors'
import * as R from 'ramda'

const captionStyle = {
  captionSide: 'top'
};


class Table extends Component {

  getKeys = ()=>{
    const {data}=this.props
    if(data)
    {
      const firstElement = R.head(data)
      const keys = Object.keys(firstElement)
      return keys;
    }
    else {
      return []
    }
  }

  getHeader = (error)=>{
    if(error) return null
    const headers = this.props.headers
    const keys = this.getKeys()
    const getName = (key)=>R.prop(key,headers)?R.prop(key,headers):key
    return <tr>{keys.map((key, index)=>{return <th key={key}>{getName(key)}</th>
  })}</tr>
  }

  renderRow = (rowData) =>{
    const keys = this.getKeys();
    return keys.map((key, index)=>{return <td key={key}>{R.prop(key,rowData)}</td>})
  }

  renderRows = (error)=>{
    if(error) return null
    const data = this.props.data;
    return data?.map((row, index)=>{
    return <tr key={index}>{this.renderRow(row)}</tr>})
  }

  renderCaption = (error)=>{
    return <caption style={captionStyle} className={`text-center font-weight-bold ${error?'text-danger':''}`}>{error?'Ошибка!':this.props.name}</caption>
  }

  render() {
    return(
      <table className="table">
          {this.renderCaption(this.props.error)}
        <thead>
        {
          this.getHeader(this.props.error)
        }
        </thead>
        <tbody>
        {
          this.renderRows(this.props.error)
        }
        </tbody>
      </table>
    )
  }
}

const mapStateToProps = (state) => {
  return{
  headers: getTableHeader(state),
  data: getTableData(state),
  name: getTableName(state),
  error: getTableError(state)}
}


export default  connect(mapStateToProps, null)(Table)
